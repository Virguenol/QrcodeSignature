@page "/demandesignature/client"
@using Grs.BioRestock.Transfer.DataModels.Demandesignature;



@if (!_loaded)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}
else
{
    <div>
        <h3>ListeDemandeSignature</h3>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => AddDemande())">Primary</MudButton>
    </div>
    <MudTable Items="@allDemandes">
        <ToolBarContent>
            <MudSpacer />
            @*            <MudTextField @bind-Value="" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        *@
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Designation</MudTh>
            <MudTh>Nom client</MudTh>
            <MudTh>Data Etablissemet</MudTh>
            <MudTh>
                Action
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Id</MudTd>
            <MudTd DataLabel="Sign">@context.Designation</MudTd>
            <MudTd DataLabel="Name">@context.NomClient</MudTd>
            <MudTd DataLabel="Position">@context.DateEtablissement</MudTd>
            <MudTd>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"></MudButton>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Update" Color="Color.Primary"></MudButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}

@code {

    [Inject] private IDemandeSignatureClient _demandeSignature { get; set; }

    private List<DemandeSingatureDto> allDemandes = new();
    private DemandeSingatureDto Demande = new();
    public DemandeSingatureDto ModelDemande { get; set; } = new();
    private string _searchString = "";

    public bool _loaded;
    private void searchString()
    {

    }

    protected override async Task OnInitializedAsync()
    {
        await GetDemande();
    }

    private async Task GetDemande()
    {
        try
        {
            var response = await _demandeSignature.GetAllAsync();
            if (response.Succeeded)
            {
                allDemandes = response.Data.ToList();
                _loaded = true;
            }
        }
        catch (Exception)
        {
            throw;
        }
    }

    private void AddDemande()
    {
        _navigationManager.NavigateTo($"/demandesignature/ajouter");
    }
}

