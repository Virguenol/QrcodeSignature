
@using System.Security.Claims
@using System.Threading.Tasks
@using Grs.BioRestock.Shared.Constants
@using Grs.BioRestock.Shared.Constants.Integration


<UserCard />
<MudNavMenu Dense="true">
	<MudNavLink Href="/Home" Icon="@Icons.Material.Outlined.Dashboard">
		@Localizer["Accueil"]
	</MudNavLink>
	
 
			@*<MudListSubheader Class="py-1 px-2 my-1">@Localizer["Animation"]</MudListSubheader>*@

	@*<MudNavLink Style="border-left:6px solid #b955c7" Href="/Session">
			@Localizer["Animations"]
	</MudNavLink>*@
		
	 
	<MudListSubheader Class="py-1 px-2 my-1">@Localizer["Personal"]</MudListSubheader>
	<MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount">
		@Localizer["Mon compte"]
	</MudNavLink>
	<MudListSubheader Class="py-1 px-2 my-1">@Localizer["Demande Signature"]</MudListSubheader>
	<MudNavLink Href="/demandesignature/client" Icon="@Icons.Material.Outlined.SupervisorAccount">
		@Localizer["Demande Client"]
	</MudNavLink>

	@if (_canViewUsers || _canViewRoles)
	{
		<MudListSubheader Class="py-1 px-2 my-1">@Localizer["Administration"]</MudListSubheader>

		@if (_canViewUsers)
		{
			<MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person">
				@Localizer["Utilisateurs"]
			</MudNavLink>
		}
		@if (_canViewRoles)
		{
			<MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.Person">@Localizer["Rôles"]</MudNavLink>
		}
		@*@if (_canViewUsers)
		{
			<MudNavLink Href="/BonDeRetour/admin_bonderetour" Icon="@Icons.Material.Outlined.Book">
				@Localizer["Bon de retour"]
			</MudNavLink>
		}*@
		@if (_canViewUsers)
		{
			<MudNavLink Href="/demandesignature/liste" Icon="@Icons.Material.Outlined.Book">
				@Localizer["Demande Signature"]
			</MudNavLink>
		}
		 
	}

@*	@if (_canViewHangfire || _canViewSwagger)
	{
		<MudListSubheader Class="py-1 px-2 my-1">@Localizer["Infrastructure"]</MudListSubheader>
		@if (_canViewHangfire)
		{
			<MudNavLink Href="/job-viewer" Icon="@Icons.Material.Outlined.Work">
				@Localizer["Job Viewer"]
			</MudNavLink>
		}
		@if (_canViewSwagger)
		{
			<MudNavLink Href="/swagger-viewer"  Icon="@Icons.Material.Outlined.LiveHelp">
				@Localizer["Swagger"]
			</MudNavLink>
		}
		@if (_canViewAuditTrails)
		{
			<MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security">
				@Localizer["Changes Logs"]
			</MudNavLink>
		}
		

	}*@
  @*  <MudListSubheader Class="py-1 px-2 my-1">@Localizer["Guide"]</MudListSubheader>
    <MudNavLink Href="/Tutorials" Icon="@Icons.Filled.VideoLibrary">
        @Localizer["Tutoriels"]
    </MudNavLink>
	<MudNavLink Href="/UserGuid" Icon="@Icons.Filled.MenuBook">
        @Localizer["User Guide"]
    </MudNavLink>*@

</MudNavMenu>

@code {
	private ClaimsPrincipal _authenticationStateProviderUser;

	private bool _canViewHangfire;
	private bool _canViewSwagger;
	private bool _canViewAuditTrails;
	private bool _canViewRoles;
	private bool _canViewUsers;
	private bool _canViewAnimation;
 
	protected override async Task OnParametersSetAsync()
	{
		_authenticationStateProviderUser = await _stateProvider.GetAuthenticationStateProviderUserAsync();
		_canViewHangfire = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Infrastructure.Jobs)).Succeeded;
		_canViewSwagger = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Infrastructure.Swagger)).Succeeded;
		_canViewAuditTrails = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.AuditTrails.View)).Succeeded;
		_canViewRoles = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Roles.View)).Succeeded;
		_canViewUsers = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Users.View)).Succeeded;
		_canViewAnimation = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Animation.View)).Succeeded;

	}

}